import dependencies.*

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion Versions.compilesdk
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.kola.cleannotes"
        minSdkVersion Versions.minsdk
        targetSdkVersion Versions.targetsdk
        versionCode Application.version_code
        versionName Application.version_name

        testInstrumentationRunner AndroidTestDependencies.instrumentation_runner
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = Java.java_version
        targetCompatibility = Java.java_version
    }

    kotlinOptions {
        jvmTarget = Java.java_version
    }
    testOptions {
        unitTests.all {
            useJunitPlatform()
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])


    //kotlin
    implementation Dependencies.kotlin_standard_library
    implementation Dependencies.kotlin_reflect
    implementation Dependencies.ktx
    implementation Dependencies.kotlin_coroutines_play_services
    implementation Dependencies.kotlin_coroutines
    implementation Dependencies.kotlin_coroutines_android

    //support
    implementation SupportDependencies.appcompat
    implementation SupportDependencies.constraintlayout
    implementation SupportDependencies.material_design
    implementation SupportDependencies.swipe_refresh_layout

    //dependencies
    implementation Dependencies.dagger
    implementation Dependencies.firebase_firestore
    implementation Dependencies.firebase_analytics
    implementation Dependencies.firebase_auth
    implementation Dependencies.firebase_crashlytics
    implementation Dependencies.retrofit_gson

    //annotation processing
    annotationProcessor AnnotationProcessing.dagger_compiler

    //Unit test
    testImplementation TestDependencies.mockk
    testImplementation TestDependencies.jupiter_api
    testImplementation TestDependencies.jupiter_params
    testImplementation TestDependencies.junit4
    testRuntimeOnly TestDependencies.jupiter_engine

}